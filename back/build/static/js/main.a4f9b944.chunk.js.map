{"version":3,"sources":["utils/tokenManager.js","utils/config.js","services/bikeData.js","components/StationList.js","components/SituationScreen.js","services/user.js","components/LoginScreen.js","App.js","index.js"],"names":["TOKEN","BIKE_API_URI","LOGIN_API_URI","process","headers","Authorization","token","URI","config","LAST_FETCH_TIME","getBikeData","a","timeNow","Date","valueOf","AuthorizationHeader","tokenManager","axios","get","response","status","data","bikeData","console","log","lastFetchTime","stations","statusText","StationItem","station","selectCenter","isCenter","name","bikesAvailable","totalSpace","spacesAvailable","bikes","cssName","bikeSituation","className","onDoubleClick","StationList","centerId","setCenter","useState","nameCriteria","setNameCriteria","length","storedStation","window","localStorage","setItem","JSON","stringify","nameCriteriaLower","toLowerCase","tableSatitons","filter","s","includes","map","key","stationId","onChange","event","target","value","list","type","id","updateBikeData","setBikeData","bikeDataService","CenterSation","center","SituationScreen","defaultCenter","getItem","parse","error","getStoredStationCenter","showStationList","setShowStationList","useEffect","updateTicker","setInterval","clearTimeout","centerData","find","timeString","toLocaleString","btnText","onClick","state","CREATE_URI","LOGIN_URI","login","username","password","post","createUser","bCreated","message","LoginScreen","setUser","setUsername","setPassword","errorMessage","setErrorMessage","userSubmitHandler","preventDefault","setTimeout","userService","userCreateHandler","onSubmit","App","storedUser","storedToken","clear","getStoredUser","user","userText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4f9b944.chunk.js","sourcesContent":["let TOKEN\r\n\r\nexport const getToken = () => {\r\n    return TOKEN\r\n}\r\n\r\nexport const setToken = (token) => {\r\n    TOKEN = token ? `bearer ${token}` : null\r\n}\r\n\r\nexport const getAuthHeader = () => {\r\n    return {\r\n        headers: { Authorization: TOKEN }\r\n    }\r\n}\r\n\r\nexport default {\r\n    getAuthHeader,\r\n    setToken,\r\n    getToken\r\n}","const NODE_ENV = process.env.NODE_ENV\r\nconst DEV_URI = 'http://localhost:3001' //process.env.REACT_APP_DEV_URI\r\nconst BIKE_API_URI = (NODE_ENV === 'development' && DEV_URI) ? `${DEV_URI}/api`: './api'\r\nconst LOGIN_API_URI = process.env.REACT_APP_LOGIN_API_URI || 'http://localhost:3004'\r\n\r\nexport default {\r\n    BIKE_API_URI,\r\n    LOGIN_API_URI\r\n}","import config from 'utils/config'\r\nimport axios from 'axios'\r\nimport tokenManager from 'utils/tokenManager'\r\n\r\nconst URI = `${config.BIKE_API_URI}/v1/bikeData`\r\n\r\n/* prevent client from spamming updates --> server BIKE_DATA updates every 1 min */\r\nlet LAST_FETCH_TIME = 0\r\n\r\n/**\r\n * @typedef {{\r\n    name: String, //station name\r\n    stationId: String, \r\n    bikesAvailable: 8, \r\n    spacesAvailable: Number,\r\n    realtime: Boolean, //are bikes&spaces realtime numbers (true) or is bikesAvailable = spacesAvailable / 2 (false)\r\n    lat: Number, //latitude\r\n    lon: Number //longitude\r\n    allowDropoff: Boolean //basically is it in action\r\n * }} bikeStation\r\n */\r\n\r\n/**\r\n * @returns { Promise<?{ lastFetchTime: Number, stations: Array<bikeStation> }> }\r\n * Null if data fetch failed/no update available yet\r\n */\r\nconst getBikeData = async () => {\r\n    const timeNow = new Date().valueOf()\r\n    const minuteInMsec = 60 * 1000\r\n    if (LAST_FETCH_TIME > timeNow - minuteInMsec) {\r\n        return null\r\n    }\r\n\r\n    try {\r\n        const AuthorizationHeader = tokenManager.getAuthHeader()\r\n        \r\n        const response = await axios.get(URI, AuthorizationHeader)\r\n        if (response.status !== 200 || !response.data || !response.data.bikeData) {\r\n            console.log('BIKEDATA: FETCH FAILED', response.status)\r\n            return null\r\n        }\r\n\r\n        const { lastFetchTime, stations } = response.data.bikeData\r\n        LAST_FETCH_TIME = lastFetchTime\r\n        return { lastFetchTime, stations }\r\n    } catch (error) {\r\n        if(error.response) {\r\n            console.log('BIKEDATA: FETCH FAILED', error.response.statusText)\r\n        } else {\r\n            console.log('BIKEDATA: FETCH FAILED', error.status)\r\n        }\r\n        return null\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    getBikeData\r\n}\r\n","import React, { useState } from 'react'\r\nimport './StationList.css'\r\n\r\n/**\r\n * @typedef {import('services/bikeData').bikeStation } bikeStation\r\n */\r\n\r\nconst StationItem = ({ station, selectCenter, isCenter }) => {\r\n    const {\r\n        name,\r\n        bikesAvailable,\r\n        spacesAvailable,\r\n    } = station\r\n\r\n    const totalSpace = bikesAvailable + spacesAvailable\r\n    const bikes = `${bikesAvailable} / ${totalSpace}`\r\n    const cssName = (isCenter) ? 'station-list-item center' : 'station-list-item'\r\n\r\n    let bikeSituation = 'bad'\r\n    if(bikesAvailable > 3) bikeSituation = 'good'\r\n    else if(bikesAvailable > 0) bikeSituation = 'neutral'\r\n\r\n    return (\r\n        <tr className={cssName} onDoubleClick={() => selectCenter(station)}>\r\n            <td>\r\n                {name}\r\n            </td>\r\n            <td>\r\n                {bikes}\r\n            </td>\r\n            <td>\r\n                <div className={`status-marker ${bikeSituation}`} />\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n * @param { {\r\n *  centerId: String,\r\n *  setCenter: Function,\r\n *  stations: Array<bikeStation>,\r\n *  lastFetchTime: Number\r\n * } } params \r\n */\r\nconst StationList = ({ centerId, setCenter, stations, lastFetchTime }) => {  \r\n    const [nameCriteria, setNameCriteria] = useState('')\r\n\r\n    if(stations.length === 0) {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                FETCHING DATA - WAIT A MOMENT\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    const onFilterChange = (event) => setNameCriteria(event.target.value)\r\n\r\n    const selectCenter = (station) => {\r\n        const storedStation = {\r\n            lastFetchTime,\r\n            ...station\r\n        }\r\n        window.localStorage.setItem('centerStation', JSON.stringify(storedStation))\r\n        setCenter(storedStation)\r\n    }\r\n\r\n    const nameCriteriaLower = nameCriteria.toLowerCase()\r\n    const filteredStations = stations.filter(s => s.name.toLowerCase().includes(nameCriteriaLower))\r\n    const tableSatitons = filteredStations.map(s => <StationItem\r\n        key={s.stationId}\r\n        station={s}\r\n        selectCenter={selectCenter}\r\n        isCenter={s.stationId === centerId}\r\n    />)\r\n\r\n    return (\r\n        <div>\r\n            <br></br>\r\n            FILTER STATIONS: <input onChange={onFilterChange} list='nameData' value={nameCriteria} type='search' />\r\n            <br></br>\r\n            Double Click to select\r\n            <br></br>\r\n            <br></br>\r\n            <table id='station-list-table'>\r\n                <thead>\r\n                    <tr >\r\n                        <th>\r\n                            {'NAME'}\r\n                        </th>\r\n                        <th>\r\n                            {'BIKES/SPACE'}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tableSatitons}\r\n                </tbody>\r\n            </table>\r\n            <datalist id=\"nameData\">\r\n                {stations.map((s) =>\r\n                    <option key={s.stationId} value={s.name} />\r\n                )}\r\n            </datalist>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StationList","import React, { useState, useEffect } from 'react'\r\nimport bikeDataService from 'services/bikeData'\r\nimport StationList from './StationList'\r\nimport './SituationScreen.css'\r\n\r\n/**\r\n * @typedef {import('services/bikeData').bikeStation } bikeStation\r\n */\r\n\r\n\r\n\r\nconst distanceCalc = (point1, point2) => {\r\n    const { lat: lat1, lon: lon1 } = point1\r\n    const { lat: lat2, lon: lon2 } = point2\r\n\r\n\r\n    /* Distance calculation algo copy paster from \r\n    https://www.movable-type.co.uk/scripts/latlong.html */\r\n\r\n    const R = 6371e3; // metres\r\n    const φ1 = lat1 * Math.PI / 180; // φ, λ in radians\r\n    const φ2 = lat2 * Math.PI / 180;\r\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\r\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\r\n\r\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n        Math.cos(φ1) * Math.cos(φ2) *\r\n        Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n\r\n    const d = R * c; // in metres\r\n    return d\r\n}\r\n\r\n\r\nconst updateBikeData = async (setBikeData) => {\r\n    const bikeData = await bikeDataService.getBikeData()\r\n    if (!bikeData || bikeData.lastFetchTime === 0 || bikeData.stations.length === 0) {\r\n        return\r\n    }\r\n    const { lastFetchTime, stations } = bikeData\r\n    setBikeData({ lastFetchTime, stations })\r\n}\r\n\r\n\r\nconst getStoredStationCenter = () => {\r\n    const defaultCenter = {\r\n        name: 'NO CENTER SELECTED',\r\n        bikesAvailable: 0,\r\n        spacesAvailable: 0,\r\n        stationId: null\r\n    }\r\n    try {\r\n        const storedStation = window.localStorage.getItem('centerStation')\r\n        if (storedStation) return JSON.parse(storedStation)\r\n        return defaultCenter\r\n    } catch (error) {\r\n        return defaultCenter\r\n    }\r\n}\r\n\r\nconst CenterSation = ({ center }) => {\r\n    const {\r\n        name,\r\n        bikesAvailable,\r\n        spacesAvailable,\r\n    } = center\r\n\r\n    const totalSpace = bikesAvailable + spacesAvailable\r\n    const bikes = `${bikesAvailable} / ${totalSpace}`\r\n\r\n    let bikeSituation = 'bad'\r\n    if (bikesAvailable > 3) bikeSituation = 'good'\r\n    else if (bikesAvailable > 0) bikeSituation = 'neutral'\r\n\r\n    return (\r\n        <table id='center-table' className={bikeSituation}>\r\n            <thead>\r\n                <tr key={1} >\r\n                    <th>\r\n                        {'NAME'}\r\n                    </th>\r\n                    <th>\r\n                        {'BIKES/SPACE'}\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>\r\n                        {name}\r\n                    </td>\r\n                    <td>\r\n                        {bikes}\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nconst SituationScreen = () => {\r\n    const [bikeData, setBikeData] = useState({ lastFetchTime: 0, stations: [] })\r\n    const [center, setCenter] = useState(() => getStoredStationCenter())\r\n    const [showStationList, setShowStationList] = useState((!center.stationId ? true : false))\r\n\r\n    /**\r\n     * @type { { lastFetchTime: Number, stations: Array<bikeStation> } }\r\n     */\r\n    const { lastFetchTime, stations } = bikeData\r\n\r\n    useEffect(() => {\r\n        updateBikeData(setBikeData)\r\n        const updateTicker = setInterval(() => {\r\n            updateBikeData(setBikeData)\r\n        }, 10 * 1000)\r\n        return () => { clearTimeout(updateTicker) }\r\n    }, [])\r\n\r\n    const centerData = stations.find(s => s.stationId === center.stationId) || center\r\n\r\n    const timeString = new Date(lastFetchTime || center.lastFetchTime).toLocaleString()\r\n\r\n    const btnText = (showStationList) ? 'HIDE LIST' : 'CHANGE STATION'\r\n\r\n    return (\r\n        <div id='station-screen'>\r\n            <div id='center-screen'>\r\n                <h2>YOUR STATION</h2>\r\n                <CenterSation center={centerData} />\r\n                <br></br>\r\n                {timeString}\r\n            </div>\r\n            <br></br>\r\n\r\n            <button onClick={() => setShowStationList(state => !state)}>{btnText}</button>\r\n            <br></br>\r\n\r\n            { showStationList && <StationList\r\n                centerId={center.stationId}\r\n                setCenter={setCenter}\r\n                stations={stations}\r\n                lastFetchTime={lastFetchTime}\r\n            />}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default SituationScreen","import config from 'utils/config'\r\nimport axios from 'axios'\r\nimport tokenManager from 'utils/tokenManager'\r\n\r\nconst CREATE_URI = `${config.LOGIN_API_URI}/api/users`\r\nconst LOGIN_URI = `${config.LOGIN_API_URI}/api/login`\r\n\r\n\r\nconst login = async (username, password) => {\r\n    try {\r\n        const response = await axios.post(LOGIN_URI, { username, password })\r\n    \r\n        if(response.status !== 201 || !response.data ) {\r\n            console.log('LOGIN: FAILED', response.status)\r\n            return false\r\n        }\r\n    \r\n        console.log('LOGIN DONE')\r\n\r\n        const token = response.data.token\r\n        if(token) {\r\n            tokenManager.setToken(token)\r\n        }\r\n\r\n        if(response.data.token !== '') window.localStorage.setItem('userToken', response.data.token)\r\n\r\n        return true\r\n    } catch (error) {\r\n        console.error('LOGIN: FAILED',error.status)\r\n        return false\r\n    }\r\n}\r\n\r\nconst createUser = async (username, password) => {\r\n    if(!username || !password) {\r\n        return { bCreated: false, message: 'MISSING USERNAME OR PASSWORD' }\r\n    }\r\n    try {\r\n        const response = await axios.post(CREATE_URI, { username, password })\r\n    \r\n        if(response.status !== 201 || !response.data ) {\r\n            console.log('LOGIN: FAILED', response.status)\r\n            return { bCreated: false, message: 'USERNAME IN USE EXISTS'}\r\n        }\r\n    \r\n        console.log('CREATED USER AND LOGGED IN DONE')\r\n\r\n        const token = response.data.token\r\n        if(token) {\r\n            tokenManager.setToken(token)\r\n        }\r\n\r\n        if(response.data.token !== '') window.localStorage.setItem('userToken', response.data.token)\r\n\r\n        return { bCreated: true, message: 'USER CREATED'}\r\n    } catch (error) {\r\n        console.error(error)\r\n        return { bCreated: false, message: 'USERNAME IN USE' }\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    login,\r\n    createUser\r\n}\r\n","import React, { useState } from 'react'\r\nimport userService from 'services/user'\r\n\r\nimport './LoginScreen.css'\r\n\r\nconst LoginScreen = ({ setUser }) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n\r\n    const userSubmitHandler = async (event) => {\r\n        event.preventDefault()\r\n        if (username === '' || password === '') {\r\n            console.log('MISSIN USERNAME OR PASSWORD')\r\n            setErrorMessage('MISSIN USERNAME OR PASSWORD')\r\n            setTimeout(() => {setErrorMessage('')}, 5000)\r\n            return\r\n        }\r\n        const success = await userService.login(username, password)\r\n        if (success) {\r\n            window.localStorage.setItem('storedUser', username)\r\n            setUser(username)\r\n        } else {\r\n            console.log('LOGIN FAILED')\r\n            setErrorMessage('INVALID USER INFORMATION')\r\n            setTimeout(() => {setErrorMessage('')}, 5000)\r\n        }\r\n    }\r\n\r\n    const userCreateHandler = async (event) => {\r\n        event.preventDefault()\r\n        if (username === '' || password === '') {\r\n            console.log('MISSIN USERNAME OR PASSWORD')\r\n            setErrorMessage('MISSIN USERNAME OR PASSWORD')\r\n            setTimeout(() => {setErrorMessage('')}, 5000)\r\n            return\r\n        }\r\n        const { bCreated, message } = await userService.createUser(username, password)\r\n        if (bCreated) {\r\n            window.localStorage.setItem('storedUser', username)\r\n            setUser(username)\r\n        } else {\r\n            console.log('LOGIN FAILED')\r\n            setErrorMessage(message)\r\n            setTimeout(() => {setErrorMessage('')}, 5000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='login-screen'>\r\n            <form onSubmit={userSubmitHandler}>\r\n                USERNAME: <input\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                    value={username}\r\n                    name='username'\r\n                />\r\n                <br></br>\r\n                PASSWORD: <input\r\n                    type='password'\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                    name='password'\r\n                    value={password}\r\n                />\r\n                <br></br>\r\n                \r\n                <br></br>\r\n\r\n                <button type='submit' >LOGIN USER</button>\r\n                <button type='button' onClick={userCreateHandler}>CREATE USER</button>\r\n                <br></br>\r\n                <br></br>\r\n                {errorMessage}<br></br>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nimport SituationScreen from './components/SituationScreen'\r\nimport LoginScreen from './components/LoginScreen'\r\nimport tokenManager from 'utils/tokenManager';\r\n\r\nconst getStoredUser = () => {\r\n  try {\r\n    const storedUser = window.localStorage.getItem('storedUser')\r\n    const storedToken = window.localStorage.getItem('userToken')\r\n    if(!storedUser || !storedToken) {\r\n      window.localStorage.clear()\r\n      return null\r\n    }\r\n\r\n    tokenManager.setToken(storedToken)\r\n\r\n    return storedUser\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(getStoredUser())\r\n\r\n  const logout = () => {\r\n    window.localStorage.clear()\r\n    setUser(null)\r\n  }\r\n\r\n  const userText = user ? `USER: ${user}` : 'Login or Create New User'\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>HSL CITYBIKE CHECKER</h1>\r\n      <h3>{userText}</h3>\r\n      {\r\n        user\r\n          ?\r\n          <SituationScreen />\r\n          :\r\n          <LoginScreen setUser={setUser} />\r\n      }\r\n      <br></br>\r\n      {\r\n        user && <button onClick={logout}>LOGOUT</button>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}